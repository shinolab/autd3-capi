name: build

on:
  push:
    branches:
      - 'develop'
  pull_request:
    types: [opened, reopened, review_requested]

jobs:
  check-src:
    runs-on: ubuntu-latest
    name: check if src files changed
    outputs:
      status: ${{ steps.changed-files.outputs.modified_files }}
    steps:
      - uses: actions/checkout@v4
      - uses: tj-actions/changed-files@v42
        id: changed-files
        with:
          files: |
            .github/actions/setup-build/action.yml
            .github/workflows/build.yml
            ./**/*.rs
            ./*.toml
            ./**/*.toml
            ./**/*.proto

  build-src:
    needs: check-src
    name: build-src-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        
      - name: Rust cache
        if: needs.check-src.outputs.status
        uses: swatinem/rust-cache@v2

      - name: Setup
        if: needs.check-src.outputs.status
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          os: ${{ matrix.os }}
          shaderc: true
          cuda: true

      - name: Test src on ${{ matrix.os }}
        if: needs.check-src.outputs.status
        run: |
          python3 build.py build
        shell: bash

  build-linux-arm32-src:
    needs: check-src
    name: build-src-linux-arm32
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Setup
        if: needs.check-src.outputs.status
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          os: ubuntu-latest
          arch: 'arm32'

      - name: Rust cache
        if: needs.check-src.outputs.status
        uses: swatinem/rust-cache@v2

      - name: Test src on ${{ matrix.os }}
        if: needs.check-src.outputs.status
        run: |
          python3 build.py build --arch arm32

  build-linux-aarch64-src:
    needs: check-src
    name: build-src-linux-aarch64
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        if: needs.check-src.outputs.status
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          os: ubuntu-latest
          arch: 'aarch64'

      - name: Rust cache
        if: needs.check-src.outputs.status
        uses: swatinem/rust-cache@v2

      - name: Test src on ${{ matrix.os }}
        if: needs.check-src.outputs.status
        run: |
          python3 build.py build --arch arm32

  lint-src:
    needs: check-src
    name: lint-src
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        if: needs.check-src.outputs.status
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          os: ubuntu-latest
          shaderc: true
          cuda: true

      - name: Rust cache
        if: needs.check-src.outputs.status
        uses: swatinem/rust-cache@v2

      - name: lint src
        if: needs.check-src.outputs.status
        run: |
          python3 build.py lint
